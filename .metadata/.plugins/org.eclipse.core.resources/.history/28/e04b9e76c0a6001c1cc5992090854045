package com.simple.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;

import javax.sql.DataSource;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import com.simple.command.BoardVO;

@Repository("ccc")
public class BoardDAOImpl implements BoardDAO{
	
	@Autowired
	DataSource ds;
	
	@Override
	public void boardRegist(BoardVO vo) {
		Connection conn = null;
		PreparedStatement pstmt = null;
		
		String sql = "insert into board values(board_seq.nextval, ?, ?, ?)";
		
		try {
			conn = ds.getConnection();
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, vo.getName());
			pstmt.setString(2, vo.getTitle());
			pstmt.setString(3, vo.getContent());
			
			pstmt.executeUpdate();
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			try {
				if(conn != null)conn.close();
				if(pstmt != null)pstmt.close();
			} catch (Exception e2) {
			}
		}
	}

	@Override
	public ArrayList<BoardVO> getList() {
		
		ArrayList<BoardVO> blist = new ArrayList<>();
		
		Connection conn = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		
		String sql = "select * from board";
	
		try {
			conn = ds.getConnection();
			pstmt = conn.prepareStatement(sql);
			rs = pstmt.executeQuery();
			
			while(rs.next()) {
				int bno = rs.getInt("bno");
				String name = rs.getString("name");
				String title = rs.getString("title");
				String content = rs.getString("content");
				
				BoardVO vo = new BoardVO(bno, name, title, content);
				blist.add(vo);
			}
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			try {
				if(conn != null)conn.close();
				if(pstmt != null)pstmt.close();
				if(rs != null)rs.close();
			} catch (Exception e2) {
			}
		}
		return blist;
		
	}

	@Override
	public void boardDelete(int bno) {
		Connection conn = null;
		PreparedStatement pstmt = null;
		
		String sql = "delete from score where bno = ?";
		
		try {
			conn = ds.getConnection();
			
			pstmt = conn.prepareStatement(sql);
			pstmt.setInt(1, bno);
			
			pstmt.executeUpdate();
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			try {
				if(conn != null)conn.close();
				if(pstmt != null)pstmt.close();
			} catch (Exception e2) {
			}
		}
	}	
	
//	ArrayList<BoardVO> blist = new ArrayList();
//	@Override
//	public void boardRegist(BoardVO vo) {
//		
//		blist.add(vo);
//	}
//
//	@Override
//	public ArrayList<BoardVO> getList() {
//		return blist;
//	}
//
//	@Override
//	public void boardDelete(int bno) {
//		blist.remove(bno);
//	}

}
